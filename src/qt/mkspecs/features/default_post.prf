CONFIG(debug, debug|release):load(debug)
else:load(release)
debug_and_release:load(debug_and_release)
incredibuild_xge {
    CONFIG -= incredibuild_xge
    CONFIG = incredibuild_xge $$CONFIG
}


QMAKE_INCDIR += $$QMAKE_INCDIR_POST
QMAKE_LIBDIR += $$QMAKE_LIBDIR_POST

# Let every project have a standard GNU `check' target
!contains(QMAKE_EXTRA_TARGETS, check) {
    # `make check' should iterate through all subdirs
    contains(TEMPLATE, subdirs) {
        check.CONFIG = recursive
        check.recurse = $$SUBDIRS
        check.recurse_target = check
    }
    # `make check' should imply building the project
    else {
        check.depends = first
    }
    QMAKE_EXTRA_TARGETS += check
}

# Add special translation sources for projects that require them.
# Note 1: Since lupdate will not parse regular config scopes right, contains checks are used instead.
# Note 2: Checking for last value of TEMPLATE is used instead of simple contains check because
#         lupdate doesn't respect "-=" variable assignments and therefore always finds "app"
#         as the first value of TEMPLATE variable.
contains(CONFIG, lupdate_run):contains(CONFIG, localize_deployment) {
    equals($$list($$last(TEMPLATE)), app): SOURCES += $$[QT_INSTALL_DATA]/mkspecs/common/symbian/appCaptionForTranslation.cpp
    SOURCES += $$[QT_INSTALL_DATA]/mkspecs/common/symbian/packageNameForTranslation.cpp
}
